package fr.xmalware.teamspeakantivpn.utils;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;

import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;

import fr.xmalware.teamspeakantivpn.Main;

public class FileUtils {

	private static final String SUFFIX = ".log";
	private static final String CONFIG = "config.json";

	/** READ FILES **/

	public static List<String> readFile(String name) {
		List<String> lines = new ArrayList<>();
		File file = new File(name);
		if (!file.exists())
			try {
				file.createNewFile();
			} catch (IOException e1) {
				e1.printStackTrace();
			}
		try (BufferedReader br = new BufferedReader(new FileReader(file))) {
			String currentLine;
			while ((currentLine = br.readLine()) != null) {
				lines.add(currentLine);
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		return lines;
	}

	public static String readFileToString(String name) {
		StringBuilder stringBuilder = new StringBuilder();
		File file = new File(name);
		if (!file.exists())
			try {
				file.createNewFile();
			} catch (IOException e1) {
				e1.printStackTrace();
			}
		try (BufferedReader br = new BufferedReader(new FileReader(file))) {
			String currentLine;
			while ((currentLine = br.readLine()) != null) {
				stringBuilder.append(currentLine + System.lineSeparator());
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		return stringBuilder.toString();
	}

	public static List<String> readLogFile(String name) {
		return readFile(name + SUFFIX);
	}

	public static JsonObject loadConfiguration() {
		Iterator<String> iterator = readFile(CONFIG).iterator();
		String result = !iterator.hasNext() ? "{}" : "";
		while (iterator.hasNext()) {
			result += iterator.next();
			if (iterator.hasNext()) result += System.lineSeparator();
		}
		JsonParser jsonParser = new JsonParser();
		JsonElement element = jsonParser.parse(result);
		return element.getAsJsonObject();
	}

	/** SAVE FILES **/

	public static void saveLogFile(String name, List<String> list) {
		save(name + SUFFIX, list);
	}
	
	public static void save(String name, List<String> list) {
		Path file = Paths.get(name);
		try {
			Files.write(file, list, Charset.forName("UTF-8"));
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	public static void saveConfiguration(JsonObject config) {
		save(CONFIG, Arrays.asList(Main.getTeamSpeak().getGson().toJson(config).split(System.lineSeparator())));
	}

}
