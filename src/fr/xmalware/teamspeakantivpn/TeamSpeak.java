package fr.xmalware.teamspeakantivpn;

import java.io.File;
import java.io.IOException;

import com.github.theholywaffle.teamspeak3.TS3Api;
import com.github.theholywaffle.teamspeak3.TS3Config;
import com.github.theholywaffle.teamspeak3.TS3Query;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

import fr.xmalware.teamspeakantivpn.objects.AntiVPNConfig;
import fr.xmalware.teamspeakantivpn.utils.FileUtils;
import lombok.Data;

@Data
public class TeamSpeak
{

	private	final Gson				gson			= new GsonBuilder().setPrettyPrinting().create();
	private	AntiVPNConfig			configuration;
	private TS3Api					api;

	void load() throws Exception
	{
		loadConfiguration();
		loadTeamSpeak();
		loadShutdownHook();
		loadAntiVPN();
	}

	void loadConfiguration() throws IOException
	{
		final File configurationFile = new File(FileUtils.CONFIG_FILE);

		if (!configurationFile.exists())
		{
			configurationFile.createNewFile();

			setConfiguration(new AntiVPNConfig());
			FileUtils.writeFile(configurationFile, getConfiguration().toJson());
			return;
		}
		else
		{
			final String jsonContent = FileUtils.readFile(FileUtils.CONFIG_FILE);
			setConfiguration(AntiVPNConfig.toConfig(jsonContent));
		}
	}

	void loadShutdownHook()
	{
		Runtime.getRuntime().addShutdownHook(new Thread()
		{
			public void run()
			{
				if (getApi() != null)
				{
					getApi().logout();
				}
			}
		});
	}

	void loadTeamSpeak()
	{
		try
		{
			final TS3Config config = new TS3Config();

			config.setHost(getConfiguration().getHostname());
			config.setQueryPort(getConfiguration().getQueryPort());

			final TS3Query query = new TS3Query(config);
			query.connect();

			setApi(query.getApi());

			getApi().login(getConfiguration().getQueryUsername(), getConfiguration().getQueryPassword());
			getApi().selectVirtualServerById(getConfiguration().getVirtualServerId());

			getApi().setNickname(getConfiguration().getNick());
		}
		catch (Exception error)
		{
			System.out.println("Unable to connect to the TeamSpeak server: " + error.getMessage() + ".");
			System.exit(-1);
		}
	}

	void loadAntiVPN()
	{
		VPNBlocker.checkEveryone();
		TeamSpeakListener.load(this.getApi());
	}

}
